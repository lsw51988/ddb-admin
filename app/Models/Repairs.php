<?php

namespace Ddb\Models;

/**
 * Repairs
 * 
 * @package Ddb\Models
 * @autogenerated by Phalcon Developer Utils
 * @date 2018-05-28, 08:51:44
 * 
 * @method static static findFirstByName($name)
 * @method static static[] findByName($name)
 * @method static int countByName($name)
 * @method static static findFirstByAddress($address)
 * @method static static[] findByAddress($address)
 * @method static int countByAddress($address)
 * @method static static findFirstByBelongerName($belonger_name)
 * @method static static[] findByBelongerName($belonger_name)
 * @method static int countByBelongerName($belonger_name)
 * @method static static findFirstByType($type)
 * @method static static[] findByType($type)
 * @method static int countByType($type)
 * @method static static findFirstByLongitude($longitude)
 * @method static static[] findByLongitude($longitude)
 * @method static int countByLongitude($longitude)
 * @method static static findFirstByLatitude($latitude)
 * @method static static[] findByLatitude($latitude)
 * @method static int countByLatitude($latitude)
 * @method static static findFirstByMobile($mobile)
 * @method static static[] findByMobile($mobile)
 * @method static int countByMobile($mobile)
 * @method static static findFirstByRemark($remark)
 * @method static static[] findByRemark($remark)
 * @method static int countByRemark($remark)
 * @method static static findFirstByCreateByType($create_by_type)
 * @method static static[] findByCreateByType($create_by_type)
 * @method static int countByCreateByType($create_by_type)
 * @method static static findFirstByBelongerId($belonger_id)
 * @method static static[] findByBelongerId($belonger_id)
 * @method static int countByBelongerId($belonger_id)
 * @method static static findFirstByAuditorId($auditor_id)
 * @method static static[] findByAuditorId($auditor_id)
 * @method static int countByAuditorId($auditor_id)
 * @method static static findFirstByRefuseReason($refuse_reason)
 * @method static static[] findByRefuseReason($refuse_reason)
 * @method static int countByRefuseReason($refuse_reason)
 * @method static static findFirstByCreatedAt($created_at)
 * @method static static[] findByCreatedAt($created_at)
 * @method static int countByCreatedAt($created_at)
 * @method static static findFirstByUpdatedAt($updated_at)
 * @method static static[] findByUpdatedAt($updated_at)
 * @method static int countByUpdatedAt($updated_at)
 */
class Repairs extends BaseModel
{

    /**
     *
     * @var integer
     */
    protected $id;

    /**
     *
     * @var string
     */
    protected $name;

    /**
     *
     * @var string
     */
    protected $address;

    /**
     *
     * @var string
     */
    protected $belonger_name;

    /**
     *
     * @var integer
     */
    protected $type;

    /**
     *
     * @var string
     */
    protected $longitude;

    /**
     *
     * @var string
     */
    protected $latitude;

    /**
     *
     * @var string
     */
    protected $mobile;

    /**
     *
     * @var string
     */
    protected $remark;

    /**
     *
     * @var integer
     */
    protected $create_by;

    /**
     *
     * @var integer
     */
    protected $create_by_type;

    /**
     *
     * @var integer
     */
    protected $belonger_id;

    /**
     *
     * @var integer
     */
    protected $auditor_id;

    /**
     *
     * @var integer
     */
    protected $status;

    /**
     *
     * @var string
     */
    protected $refuse_reason;

    /**
     *
     * @var string
     */
    protected $created_at;

    /**
     *
     * @var string
     */
    protected $updated_at;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return static
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field name
     *
     * @param string $name
     * @return static
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Method to set the value of field address
     *
     * @param string $address
     * @return static
     */
    public function setAddress($address)
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Method to set the value of field belonger_name
     *
     * @param string $belonger_name
     * @return static
     */
    public function setBelongerName($belonger_name)
    {
        $this->belonger_name = $belonger_name;

        return $this;
    }

    /**
     * Method to set the value of field type
     *
     * @param integer $type
     * @return static
     */
    public function setType($type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Method to set the value of field longitude
     *
     * @param string $longitude
     * @return static
     */
    public function setLongitude($longitude)
    {
        $this->longitude = $longitude;

        return $this;
    }

    /**
     * Method to set the value of field latitude
     *
     * @param string $latitude
     * @return static
     */
    public function setLatitude($latitude)
    {
        $this->latitude = $latitude;

        return $this;
    }

    /**
     * Method to set the value of field mobile
     *
     * @param string $mobile
     * @return static
     */
    public function setMobile($mobile)
    {
        $this->mobile = $mobile;

        return $this;
    }

    /**
     * Method to set the value of field remark
     *
     * @param string $remark
     * @return static
     */
    public function setRemark($remark)
    {
        $this->remark = $remark;

        return $this;
    }

    /**
     * Method to set the value of field create_by
     *
     * @param integer $create_by
     * @return static
     */
    public function setCreateBy($create_by)
    {
        $this->create_by = $create_by;

        return $this;
    }

    /**
     * Method to set the value of field create_by_type
     *
     * @param integer $create_by_type
     * @return static
     */
    public function setCreateByType($create_by_type)
    {
        $this->create_by_type = $create_by_type;

        return $this;
    }

    /**
     * Method to set the value of field belonger_id
     *
     * @param integer $belonger_id
     * @return static
     */
    public function setBelongerId($belonger_id)
    {
        $this->belonger_id = $belonger_id;

        return $this;
    }

    /**
     * Method to set the value of field auditor_id
     *
     * @param integer $auditor_id
     * @return static
     */
    public function setAuditorId($auditor_id)
    {
        $this->auditor_id = $auditor_id;

        return $this;
    }

    /**
     * Method to set the value of field status
     *
     * @param integer $status
     * @return static
     */
    public function setStatus($status)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Method to set the value of field refuse_reason
     *
     * @param string $refuse_reason
     * @return static
     */
    public function setRefuseReason($refuse_reason)
    {
        $this->refuse_reason = $refuse_reason;

        return $this;
    }

    /**
     * Method to set the value of field created_at
     *
     * @param string $created_at
     * @return static
     */
    public function setCreatedAt($created_at)
    {
        $this->created_at = $created_at;

        return $this;
    }

    /**
     * Method to set the value of field updated_at
     *
     * @param string $updated_at
     * @return static
     */
    public function setUpdatedAt($updated_at)
    {
        $this->updated_at = $updated_at;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Returns the value of field address
     *
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Returns the value of field belonger_name
     *
     * @return string
     */
    public function getBelongerName()
    {
        return $this->belonger_name;
    }

    /**
     * Returns the value of field type
     *
     * @return integer
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Returns the value of field longitude
     *
     * @return string
     */
    public function getLongitude()
    {
        return $this->longitude;
    }

    /**
     * Returns the value of field latitude
     *
     * @return string
     */
    public function getLatitude()
    {
        return $this->latitude;
    }

    /**
     * Returns the value of field mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->mobile;
    }

    /**
     * Returns the value of field remark
     *
     * @return string
     */
    public function getRemark()
    {
        return $this->remark;
    }

    /**
     * Returns the value of field create_by
     *
     * @return integer
     */
    public function getCreateBy()
    {
        return $this->create_by;
    }

    /**
     * Returns the value of field create_by_type
     *
     * @return integer
     */
    public function getCreateByType()
    {
        return $this->create_by_type;
    }

    /**
     * Returns the value of field belonger_id
     *
     * @return integer
     */
    public function getBelongerId()
    {
        return $this->belonger_id;
    }

    /**
     * Returns the value of field auditor_id
     *
     * @return integer
     */
    public function getAuditorId()
    {
        return $this->auditor_id;
    }

    /**
     * Returns the value of field status
     *
     * @return integer
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Returns the value of field refuse_reason
     *
     * @return string
     */
    public function getRefuseReason()
    {
        return $this->refuse_reason;
    }

    /**
     * Returns the value of field created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Returns the value of field updated_at
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'repairs';
    }

}
